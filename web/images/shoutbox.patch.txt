diff --git a/app/Resources/views/default/index.html.twig b/app/Resources/views/default/index.html.twig
index e9b07bd..b57643b 100644
--- a/app/Resources/views/default/index.html.twig
+++ b/app/Resources/views/default/index.html.twig
@@ -24,5 +24,9 @@
 
     </div>
  #}
+
+    <div style="outline: 1px solid red">
+        {{ render(path('shoutbox_form')) }}
+    </div>
 {% endblock %}
 
diff --git a/app/Resources/views/shoutbox/form.html.twig b/app/Resources/views/shoutbox/form.html.twig
new file mode 100644
index 0000000..935a6aa
--- /dev/null
+++ b/app/Resources/views/shoutbox/form.html.twig
@@ -0,0 +1,27 @@
+<section>
+    <header>
+        <h3>Shoutbox</h3>
+    </header>
+
+    <iframe id="shoutbox" src="{{ path('shoutbox_index') }}" width="100%" height="300px"></iframe>
+
+    {% if app.user %}
+        {{ form_start(form) }}
+            {{ form_row(form.text) }}
+
+            <button type="submit">
+                Wyślij
+            </button>
+        {{ form_end(form) }}
+    {% else %}
+        <p>Zaloguj sie żeby dodawać wiadomości</p>
+    {% endif %}
+</section>
+
+<script type="text/javascript">
+    window.onload = function() {
+        setInterval(function() {
+            window.frames['shoutbox'].contentWindow.location.reload();
+        }, 5000);
+    }
+</script>
diff --git a/app/Resources/views/shoutbox/index.html.twig b/app/Resources/views/shoutbox/index.html.twig
new file mode 100644
index 0000000..ad4a8fa
--- /dev/null
+++ b/app/Resources/views/shoutbox/index.html.twig
@@ -0,0 +1,6 @@
+<ul>
+    {% for message in messages %}
+        <li>#{{ message.id }}: {{ message.text }}</li>
+    {% endfor %}
+</ul>
+
diff --git a/app/config/security.yml b/app/config/security.yml
index 44a25e9..bdee39d 100644
--- a/app/config/security.yml
+++ b/app/config/security.yml
@@ -27,4 +27,5 @@ security:
         - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
-        - { path: ^/admin/, role: ROLE_ADMIN }
\ No newline at end of file
+        - { path: ^/shoutbox, method: POST, role: ROLE_USER }
+        - { path: ^/admin/, role: ROLE_ADMIN }
diff --git a/src/AppBundle/Controller/ShoutboxController.php b/src/AppBundle/Controller/ShoutboxController.php
new file mode 100644
index 0000000..319e141
--- /dev/null
+++ b/src/AppBundle/Controller/ShoutboxController.php
@@ -0,0 +1,73 @@
+<?php
+
+namespace AppBundle\Controller;
+
+use AppBundle\Entity\Message;
+use AppBundle\Form\Type\MessageType;
+use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
+use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
+use Symfony\Bundle\FrameworkBundle\Controller\Controller;
+use Symfony\Component\HttpFoundation\Request;
+
+/**
+ * @Route("/shoutbox")
+ */
+class ShoutboxController extends Controller
+{
+    /**
+     * @Route("/messages", name="shoutbox_index")
+     * @Method(methods={"GET"})
+     */
+    public function indexAction()
+    {
+        $messages = $this
+            ->getDoctrine()
+            ->getRepository(Message::class)
+            ->findBy([], ['id' => 'DESC'], 100);
+
+        return $this->render(':shoutbox:index.html.twig', [
+            'messages' => $messages
+        ]);
+    }
+
+    /**
+     * @Route(name="shoutbox_form")
+     * @Method(methods={"GET"})
+     */
+    public function formAction()
+    {
+        $form = $this->createMessageForm();
+
+        return $this->render(':shoutbox:form.html.twig', [
+            'form' => $form->createView()
+        ]);
+    }
+
+    /**
+     * @Route(name="shoutbox_submit")
+     * @Method(methods={"POST"})
+     */
+    public function submitAction(Request $request)
+    {
+        $message = new Message();
+        $message->setUser($this->getUser());
+
+        $form = $this->createMessageForm($message);
+        $form->handleRequest($request);
+        if ($form->isValid()) {
+            $em = $this->getDoctrine()->getEntityManager();
+            $em->persist($message);
+            $em->flush();
+        }
+
+        return $this->redirect($this->generateUrl('homepage'));
+    }
+
+    private function createMessageForm($message = null)
+    {
+        return $this->createForm(MessageType::class, $message, [
+            'action' => $this->generateUrl('shoutbox_submit'),
+            'method' => 'POST'
+        ]);
+    }
+}
diff --git a/src/AppBundle/Entity/Message.php b/src/AppBundle/Entity/Message.php
new file mode 100644
index 0000000..272b9c9
--- /dev/null
+++ b/src/AppBundle/Entity/Message.php
@@ -0,0 +1,64 @@
+<?php
+
+namespace AppBundle\Entity;
+
+use Doctrine\ORM\Mapping as ORM;
+
+/**
+ * @ORM\Entity
+ * @ORM\Table(name="message")
+ */
+class Message
+{
+    /**
+     * @ORM\Id
+     * @ORM\Column(type="integer")
+     * @ORM\GeneratedValue(strategy="AUTO")
+     */
+    protected $id;
+
+    /**
+     * @var User
+     *
+     * @ORM\ManyToOne(targetEntity="User")
+     * @ORM\JoinColumn(name="user_id", referencedColumnName="id")
+     */
+    protected $user;
+
+    /**
+     * @var string
+     *
+     * @ORM\Column(type="text")
+     */
+    protected $text;
+
+    public function getId()
+    {
+        return $this->id;
+    }
+
+    public function setId($id)
+    {
+        $this->id = $id;
+    }
+
+    public function getUser()
+    {
+        return $this->user;
+    }
+
+    public function setUser(User $user = null)
+    {
+        $this->user = $user;
+    }
+
+    public function getText()
+    {
+        return $this->text;
+    }
+
+    public function setText($text)
+    {
+        $this->text = $text;
+    }
+}
diff --git a/src/AppBundle/Entity/User.php b/src/AppBundle/Entity/User.php
index 01b4de8..f0d09d4 100644
--- a/src/AppBundle/Entity/User.php
+++ b/src/AppBundle/Entity/User.php
@@ -3,8 +3,8 @@
 
 namespace AppBundle\Entity;
 
-use FOS\UserBundle\Model\User as BaseUser;
 use Doctrine\ORM\Mapping as ORM;
+use FOS\UserBundle\Model\User as BaseUser;
 
 /**
  * @ORM\Entity
@@ -24,4 +24,4 @@ class User extends BaseUser
         parent::__construct();
         // your own logic
     }
-}
\ No newline at end of file
+}
diff --git a/src/AppBundle/Form/Type/MessageType.php b/src/AppBundle/Form/Type/MessageType.php
new file mode 100644
index 0000000..c62ab05
--- /dev/null
+++ b/src/AppBundle/Form/Type/MessageType.php
@@ -0,0 +1,27 @@
+<?php
+
+namespace AppBundle\Form\Type;
+
+use AppBundle\Entity\Message;
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\Extension\Core\Type\TextareaType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\OptionsResolver\OptionsResolver;
+
+class MessageType extends AbstractType
+{
+    public function buildForm(FormBuilderInterface $builder, array $options)
+    {
+        $builder->add('text', TextareaType::class, [
+            'label' => 'Wiadomość'
+        ]);
+    }
+
+    public function configureOptions(OptionsResolver $resolver)
+    {
+        $resolver->setDefaults([
+            'data_class' => Message::class
+        ]);
+    }
+
+}
